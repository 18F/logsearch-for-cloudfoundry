##-------------------------------------------------------------------------------
# Parses app HttpStart, HttpStop and HttpStartStop events.                       |
#
# An HttpStart event is emitted when a client sends a request.                   |
# An HttpStop event is emitted when a client receives a response to its request. |
# An HttpStartStop event represents the whole lifecycle of an HTTP request.      |
##-------------------------------------------------------------------------------
if( [@type] in ["HttpStart", "HttpStop", "HttpStartStop"] ) {

    mutate {
      add_tag => [ "http" ]
    }

    # Related application
    if ![parsed_json_field][instance_id] or [parsed_json_field][instance_id] == "" {
        mutate {
          remove_field => "[parsed_json_field][instance_id]"
          remove_field => "[parsed_json_field][instance_index]"
        }
    }

    ## NOTE: remove this translations as soon as https://github.com/cloudfoundry-community/firehose-to-syslog/issues/115 isfixed
    # Translate [method]
    translate {
      field => "[parsed_json_field][method]"
      dictionary => [ "1", "GET", "2", "POST", "3", "PUT", "4", "DELETE",	"5", "HEAD",
                      "6", "ACL", "7", "BASELINE_CONTROL", "8", "BIND",	"9", "CHECKIN",
                      "10", "CHECKOUT",	"11", "CONNECT", "12", "COPY", "13", "DEBUG",
                      "14", "LABEL",	"15", "LINK",	"16", "LOCK",	"17", "MERGE", "18", "MKACTIVITY",
                      "19", "MKCALENDAR",	"20", "MKCOL", "21", "MKREDIRECTREF",	"22", "MKWORKSPACE",
                      "23", "MOVE",	"24", "OPTIONS", "25", "ORDERPATCH", "26", "PATCH",	"27", "PRI",
                      "28", "PROPFIND",	"29", "PROPPATCH", "30", "REBIND", "31", "REPORT", "32", "SEARCH",
                      "33", "SHOWMETHOD",	"34", "SPACEJUMP", "35", "TEXTSEARCH", "36", "TRACE", "37", "TRACK",
                      "38", "UNBIND",	"39", "UNCHECKOUT",	"40", "UNLINK",	"41", "UNLOCK",	"42", "UPDATE",
                      "43", "UPDATEREDIRECTREF",	"44", "VERSION_CONTROL"
      ]
      destination => "[parsed_json_field][method]"
      override => true
      fallback => "NA"
    }

    # Translate [peer_type]
    translate {
      field => "[parsed_json_field][peer_type]"
      dictionary => [ "1", "Client", "2", "Server" ]
      destination => "[parsed_json_field][peer_type]"
      override => true
      fallback => "NA"
    }
    ## endOf NOTE

    # Set @message for different Http* event types
    if( [@type] == "HttpStart" ) {
        mutate {
          replace => {"@message" => "%{[parsed_json_field][method]} %{[parsed_json_field][uri]}"}
        }
    } else if( [@type] == "HttpStop" ) {
        mutate {
          replace => {"@message" => "%{[parsed_json_field][status_code]} %{[parsed_json_field][uri]}"}
        }
    } else if( [@type] == "HttpStartStop" ) {
        mutate {
          replace => {"@message" => "%{[parsed_json_field][status_code]} %{[parsed_json_field][method]} %{[parsed_json_field][uri]} (%{[parsed_json_field][duration_ms]} ms)"}
        }
    }


}
