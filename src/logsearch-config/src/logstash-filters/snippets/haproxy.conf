if [@type] in ["syslog_cf", "relp_cf"] and [syslog_program] == "haproxy" {

    grok {
      match => [ "@message", "%{IP:[haproxy][client_ip]}:%{INT:[haproxy][client_port]} \[%{DATA:[haproxy][accept_date]}\] %{NOTSPACE:[haproxy][frontend_name]} %{NOTSPACE:[haproxy][backend_name]}/%{NOTSPACE:[haproxy][server_name]} %{INT:[haproxy][time_request]}/%{INT:[haproxy][time_queue]}/%{INT:[haproxy][time_backend_connect]}/%{INT:[haproxy][time_backend_response]}/%{NOTSPACE:[haproxy][time_duration]} %{INT:[haproxy][http_status_code]} %{NOTSPACE:[haproxy][bytes_read]} %{DATA:[haproxy][captured_request_cookie]} %{DATA:[haproxy][captured_response_cookie]} %{NOTSPACE:[haproxy][termination_state]} %{INT:[haproxy][actconn]}/%{INT:[haproxy][feconn]}/%{INT:[haproxy][beconn]}/%{INT:[haproxy][srvconn]}/%{NOTSPACE:[haproxy][retries]} %{INT:[haproxy][srv_queue]}/%{INT:[haproxy][backend_queue]} (%{GREEDYDATA:[haproxy][headers]})?( )?\"(?<message>(<BADREQ>|(%{WORD:[haproxy][http_verb]} (%{URIPROTO:[haproxy][http_proto]}://)?(?:%{USER:[haproxy][http_user]}(?::[^@]*)?@)?(?:%{URIHOST:[haproxy][http_host]})?(?:%{URIPATHPARAM:[haproxy][http_request]})?( HTTP/%{NUMBER:[haproxy][http_version]})?))?)\"" ]
      match => [ "@message", "%{IP:[haproxy][client_ip]}:%{INT:[haproxy][client_port]} \[%{DATA:[haproxy][accept_date]}\] %{NOTSPACE:[haproxy][frontend_name]}%{SPACE}%{GREEDYDATA:message}" ]
      tag_on_failure => "fail/cloudfoundry/haproxy/grok"
    }

    if !("fail/cloudfoundry/haproxy/grok" in [tags]) {

        # ------------ specific fields ----------------

        mutate {
          rename => {"message" => "@message"} # @message
        }

        if [haproxy][http_status_code] {
            mutate {  # @level
              convert => { "[haproxy][http_status_code]" => "integer" }
            }
            if [haproxy][http_status_code] >= 400 {
              mutate {
                add_field => { "@level" => "ERROR" }
              }
            } else {
              mutate {
                add_field => { "@level" => "INFO" }
              }
            }
        }

    }

    # -------- specific @source.component, type, tags ----------
    mutate {
      replace => { "[@source][component]" => "haproxy" } # specific value
      replace => { "@type" => "haproxy_cf" }
      add_tag => "haproxy"
    }
    # ----------------------------------------------------------

}
