##--------------------------
# Uaa conf. Parses uaa logs.|
##--------------------------
if [@source][component] == "vcap.uaa" {

    mutate {
      replace => { "[@source][component]" => "uaa" } # remove vcap. prefix
      add_tag => "uaa"
    }

    grok {
      match => { "@message" => "\[%{TIMESTAMP_ISO8601:uaa_timestamp}\]%{SPACE}uaa%{SPACE}-%{SPACE}%{NUMBER:pid:int}%{SPACE}\[%{DATA:thread_name}\]%{SPACE}....%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}---%{SPACE}Audit:%{SPACE}(?<message>(%{WORD:audit_event_type}%{SPACE}\('%{DATA:audit_event_data}'\))):%{SPACE}principal=%{DATA:audit_event_principal},%{SPACE}origin=\[%{DATA:audit_event_origin}\],%{SPACE}identityZoneId=\[%{DATA:audit_event_identity_zone_id}\]"}
      tag_on_failure => "fail/cloudfoundry/platform-uaa/grok"
    }

    if !("fail/cloudfoundry/platform-uaa/grok" in [tags]) {

        mutate {
          rename => { "message" => "@message" } # @message
          rename => { "loglevel" => "@level" } # @level
        }

        # extract audit_event_remote_address and geoip it
        if "PrincipalAuthenticationFailure" == [audit_event_type] {
            mutate {
              add_field => { "audit_event_remote_address" => "%{audit_event_origin}" }
           }
        }
        if [audit_event_origin] =~ /remoteAddress=/ {
            grok {
              match => { "audit_event_origin" => "remoteAddress=%{IP:audit_event_remote_address}" }
            }
        }
        if [audit_event_remote_address] {
           geoip {
             source => "audit_event_remote_address"
           }
        }

        mutate {
          split =>  { "audit_event_origin" => ", " }
        }
        mutate {
          rename => { "pid"                           => "[uaa][pid]" }
          rename => { "thread_name"                   => "[uaa][thread_name]" }
          rename => { "uaa_timestamp"                 => "[uaa][timestamp]" }
          rename => { "audit_event_type"              => "[uaa][type]" }
          rename => { "audit_event_remote_address"    => "[uaa][remote_address]" }
          rename => { "audit_event_data"              => "[uaa][data]" }
          rename => { "audit_event_principal"         => "[uaa][principal]" }
          rename => { "audit_event_origin"            => "[uaa][origin]" }
          rename => { "audit_event_identity_zone_id"  => "[uaa][identity_zone_id]" }
        }

    }
}

