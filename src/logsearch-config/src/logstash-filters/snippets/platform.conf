if [@type] in ["syslog", "relp"] and [syslog_program] != "doppler" {

    # Try parsing with default CF format (metron agent format)

    if( [syslog_program] == "haproxy" ) {
        mutate {
          rename => { "[haproxy][message]" => "@message"}
        }
    }

    grok {
      match => [ "@message", "(?:\[job=%{NOTSPACE:jobname}|-) +(?:index=%{NOTSPACE:jobindex}\]|-)%{SPACE}%{GREEDYDATA:@message}" ]
      overwrite => [ "@message" ] # @message
      tag_on_failure => "fail/cloudfoundry/platform/grok"
    }

    # ------------- common fields ------------------

    # @source (component, host) & @shipper
    mutate {
      add_field => { "[@source][component]" => "%{syslog_program}" } # @source.component
      rename => { "[host]" => "[@source][host]" }
    }

    # @shipper
    mutate {
      replace => { "[@shipper][priority]" => "%{syslog_pri}" }
      replace => { "[@shipper][name]" => "%{syslog_program}_%{[@type]}" }
    }

    # @input
    mutate {
      add_field => { "@input" => "%{@type}" }
    }

    if !("fail/cloudfoundry/platform/grok" in [tags]) {

        # platform index
        mutate {
          replace => { "[@metadata][index]" => "platform" }
        }

        # @source.name and @source.instance
        mutate {
          add_field => { "[@source][name]" => "%{jobname}/%{jobindex}" }
        }
        mutate {
          convert => { "jobindex" => "integer" }
        }
        mutate {
          rename => { "jobindex" => "[@source][instance]" }
          remove_field => "jobname"
        }
        
        # @type & tags
        mutate {
          replace => { "@type" => "%{[@type]}_cf" }
          add_tag => "cf"
        }
    }
    # -------------------------------------------------

}
