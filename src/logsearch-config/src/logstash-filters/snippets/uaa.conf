if [@type] in ["syslog", "relp"] and [syslog_program] == "vcap.uaa" {

    grok {
        match => { "@message" =>
        "\[job=%{NOTSPACE:jobname}%{SPACE}index=%{NOTSPACE:jobindex}\]%{SPACE}\[%{TIMESTAMP_ISO8601:uaa_timestamp}\]%{SPACE}uaa%{SPACE}-%{SPACE}%{NUMBER:pid:int}%{SPACE}\[%{DATA:thread_name}\]%{SPACE}....%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}---%{SPACE}Audit:%{SPACE}%{WORD:audit_event_type}%{SPACE}\('%{DATA:audit_event_data}'\):%{SPACE}principal=%{DATA:audit_event_principal},%{SPACE}origin=\[%{DATA:audit_event_origin}\],%{SPACE}identityZoneId=\[%{DATA:audit_event_identity_zone_id}\]"
        }
        tag_on_failure => [
            "fail/cloudfoundry/uaa"
        ]
        remove_field => [ "@message" ]
    }

    if !("fail/cloudfoundry/uaa" in [tags]) {

        # ------------ specific fields ----------------
        date {
            match => [ "uaa_timestamp", "ISO8601" ]
            remove_field => "uaa_timestamp"
        }
        mutate {
          rename => { "loglevel" => "[@level]" } # @level
        }

        # UAA specific
        if "PrincipalAuthenticationFailure" == [audit_event_type] {
            mutate {
                add_field => { "audit_event_remote_address" => "%{audit_event_origin}" }
           }
        }
        if [audit_event_origin] =~ /remoteAddress=/ {
            grok {
                match => { "audit_event_origin" => "remoteAddress=%{IP:audit_event_remote_address}" }
            }
        }
        if [audit_event_remote_address] {
           geoip {
              source => "audit_event_remote_address"
           }
        }
        mutate {
            split =>  { "audit_event_origin" => ", " }
        }
        mutate {
            rename => { "pid"            => "[uaa][pid]" }
            rename => { "thread_name"     => "[uaa][thread_name]" }
            rename => { "audit_event_type"              => "[uaa][type]" }
            rename => { "audit_event_remote_address"    => "[uaa][remote_address]" }
            rename => { "audit_event_data"              => "[uaa][data]" }
            rename => { "audit_event_principal"         => "[uaa][principal]" }
            rename => { "audit_event_origin"            => "[uaa][origin]" }
            rename => { "audit_event_identity_zone_id"  => "[uaa][identity_zone_id]" }
        }

        # ------------- common fields ------------------

        # @source (component, name, instance, host) & @shipper
        mutate {
          add_field => { "[@source][component]" => "uaa" } # specific value
          add_field => { "[@source][name]" => "%{jobname}/%{jobindex}" }
        }
        mutate {
          convert => { "jobindex" => "integer" }
        }
        mutate {
          rename => { "jobindex" => "[@source][instance]" }
          remove_field => "jobname"
          replace => [ "[@job][host]", "%{[@source][host]}" ]
        }

        # @shipper
        mutate {
            replace => [ "[@shipper][priority]", "%{syslog_pri}" ]
            replace => [ "[@shipper][name]", "%{syslog_program}_%{[@type]}" ]
        }

        # -------- specific index & type, tags ----------
        mutate {
          replace => { "[@metadata][index]" => "platform" }
          replace => { "[@type]" => "uaa_cf" }
          add_tag => "uaa-cf"
        }
        # -----------------------------------------------
    }

}

