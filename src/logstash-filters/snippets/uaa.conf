# Parse Cloud Foundry logs from syslog_aggregator

grok {
    match => { "syslog_message" => "\[job=%{NOTSPACE:jobname}%{SPACE}index=%{NOTSPACE:jobindex}\]%{SPACE}\[%{TIMESTAMP_ISO8601:uaa_timestamp}\]%{SPACE}uaa%{SPACE}-%{SPACE}%{NUMBER:pid:int}%{SPACE}\[%{DATA:thread_name}\]%{SPACE}....%{SPACE}%{LOGLEVEL:@loglevel}%{SPACE}---%{SPACE}Audit:%{SPACE}%{WORD:audit_event_type}%{SPACE}\('%{DATA:audit_event_data}'\):%{SPACE}principal=%{DATA:audit_event_principal},%{SPACE}origin=\[%{DATA:audit_event_origin}\],%{SPACE}identityZoneId=\[%{DATA:audit_event_identity_zone_id}\]" }
    tag_on_failure => [
        "fail/cloudfoundry/uaa-audit"
    ]
    add_tag => "uaa-audit"
}

if !("fail/cloudfoundry/uaa-audit" in [tags]) {
    date {
        match => [ "uaa_timestamp", "ISO8601" ]
	remove_field => "uaa_timestamp"
    }

    if "PrincipalAuthenticationFailure" == [audit_event_type] {
        mutate {
            add_field => { "audit_event_remote_address" => "%{audit_event_origin}" }
       }
    }

    if [audit_event_origin] =~ /remoteAddress=/ {
        grok {
            match => { "audit_event_origin" => "remoteAddress=%{IP:audit_event_remote_address}" }
        }
    }

    if [audit_event_remote_address] {
       geoip {
          source => "audit_event_remote_address"
       }
    }

    mutate {
        replace => { "@type" => "uaa-audit" }

	remove_field => "syslog_pri"
	remove_field => "syslog_facility"
	remove_field => "syslog_facility_code"
	remove_field => "syslog_message"
	remove_field => "syslog_severity"
	remove_field => "syslog_severity_code"

        rename => { "syslog_program" => "[@source][syslog_program]" }
        rename => { "@source.host"   => "[@source][host]" }
        rename => { "jobname"        => "[@source][job][name]" }
        rename => { "jobindex"       => "[@source][job][index]" }

        split =>  { "audit_event_origin" => ", " }
    }
}
